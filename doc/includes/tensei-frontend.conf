# Configuration file for the tensei frontend.

tensei {
  agents {
    # Placeholder for agents configuration. Don't delete!
  }

  queue {
    # The interval for the repeatedly start of the next entry of the queue
    start-interval = 10 seconds
    # Timeout for starting the next entry of the queue
    starting-timeout = 5 seconds
  }

  frontend {
    # Set a default hostname which can be overridden using a system property.
    hostname = "localhost"
    hostname = ${?tensei.frontend.hostname}
    # The interval for polling the frontend service from the websocket for agents informations updates.
    agent-information-polling-interval = 3 seconds
    # Defines how long buffered agents informations are considered valid.
    agent-information-update-interval  = 3 seconds
    # The default timeout for ask operations.
    ask-timeout = 5 seconds
    # Timeout for database operations.
    db-timeout = 10 seconds
    # Timeout for establishing a connection to the server.
    server-connect-timeout = 5 seconds
    # The timeout for the resolving of the actor selection of the chef de cuisine into an actor ref.
    # This timeout will usually be overriden by the `server-connect-timeout`.
    server-startup-timeout = 30 seconds
    # The interval for polling the system for the actual information about the queue
    queue-polling-interval = 1 seconds
    # Timeout for the statistical analysis
    statistic-timeout = 360 seconds
    # Timeout for the extraction of a schema
    extract-schema-timeout = 120 seconds
    # The maximum number of bytes to fetch from an agent run log at once.
    # Bigger numbers will speed things up but may lead to data loss and inconsistencies.
    # 8 KB (8192 bytes) provides a sensible default.
    log-fetcher-max-bytes = 8192

    cronjobs {
      # The initial delay after starting the system before we initialise existing cronjobs.
      init-delay = 500 milliseconds
    }

    triggers {
      # The initial delay after starting the system before we initialise existing triggers.
      init-delay = 500 milliseconds
    }

    ui {
      # The number of log lines per page.
      logs-per-page = 20

      # Number of lines of last entries in the statistics list of executed transformation configurations
      queue-hist-per-page = 20

      statistics {
        # Timeout for generating statistics of the transformation history queue.
        history-timeout = 5 minutes
      }
    }

    akka {
      loggers                          = ["akka.event.slf4j.Slf4jLogger"]
      loglevel                         = info
      log-dead-letters                 = 5
      log-dead-letters-during-shutdown = on

      actor {
        provider = "akka.cluster.ClusterActorRefProvider"

        debug {
          lifecycle = off
          unhandled = on
        }
      }

      cluster {
        seed-nodes                  = [
          "akka.tcp://tensei-system@"${tensei.server.hostname}":"${tensei.server.port}""
        ]
        roles = [frontend]
      }

      remote {
        enabled-transports          = ["akka.remote.netty.tcp"]
        log-remote-lifecycle-events = off

        transport-failure-detector {
          heartbeat-interval = 4 seconds
          acceptable-heartbeat-pause = 10 seconds
        }

        netty.tcp {
          hostname = ${tensei.frontend.hostname}
          port     = 0
        }
      }
    }
  }

  # Server configuration.
  server {
    ask-timeout = 5 seconds
    # Set a default hostname that can be overridden using a system property.
    hostname = "localhost"
    hostname = ${?tensei.server.hostname}
    # Set a default port that can be overridden using a system property.
    port = 4096
    port = ${?tensei.server.port}
  }
}
